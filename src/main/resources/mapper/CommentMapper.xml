<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CommentMapper">

    <select id="getCount" resultType="Long">
        select count(*)
        from comment c,
             comment r
        where c.course_id = #{courseId}
          and (r.comment_id = c.comment_id
            or r.root_comment_id = c.comment_id)
    </select>


    <insert id="save" parameterType="entity.CommentEntity"
            useGeneratedKeys="true" keyProperty="commentId" keyColumn="comment_id">
        insert into comment (user_id,
                             comment_time,
                             comment_content,
                             course_id,
                             root_comment_id,
                             reply_comment_id,
                             user_agent)
        values (#{userId},
                #{commentTime},
                #{commentContent},
                #{courseId},
                #{rootCommentId},
                #{replyCommentId},
                #{userAgent})
    </insert>


    <select id="selectRootComments" resultMap="rootComment">
        SELECT c.comment_id      as commentId,
               c.comment_content as commentContent,
               c.comment_time    as commentTime,
               c.course_id       as courseId,
               c.user_agent      as userAgent,
               c.user_id         as userId,
               u.username        as username
        FROM comment c,
             user u
        where c.course_id = #{courseId}
          and u.user_id = c.user_id
        order by c.comment_id desc
    </select>

    <resultMap id="rootComment" type="dto.RootCommentDTO">
        <id column="commentId" property="commentId"/>
        <result column="commentTime" property="commentTime"/>
        <result column="commentContent" property="commentContent"/>
        <result column="courseId" property="courseId"/>
        <result column="userAgent" property="userAgent"/>
        <result column="userId" property="userId"/>
        <result column="username" property="username"/>
        <collection property="replyComments" column="commentId"
                    ofType="dto.ReplyCommentDTO" select="selectReply"/>
    </resultMap>

    <select id="selectReply" resultType="dto.ReplyCommentDTO">
        SELECT
            c.comment_id       as commentId,
            c.comment_content  as commentContent,
            c.comment_time     as commentTime,
            c.user_agent       as userAgent,
            c.root_comment_id  as rootCommentId,
            c.reply_comment_id as replyCommentId,
            u.user_id          as userId,
            u.username         as username,
            ru.username        as replyUsername,
            ru.user_id         as replyUserId
        FROM comment c,
             user u,
             comment r,
             user ru
        WHERE c.root_comment_id = #{comment_id}
          and c.user_id = u.user_id
          and r.comment_id = c.reply_comment_id
          and r.user_id = ru.user_id
        order by c.comment_id asc
    </select>

    <select id="selectReplyComments" resultType="dto.ReplyCommentDTO">
        SELECT
            c.comment_id       as commentId,
            c.comment_content  as commentContent,
            c.comment_time     as commentTime,
            c.user_agent       as userAgent,
            c.root_comment_id  as rootCommentId,
            c.reply_comment_id as replyCommentId,
            u.user_id          as userId,
            u.username         as username,
            ru.username        as replyUsername,
            ru.user_id         as replyUserId
        FROM comment c,
             user u,
             comment r,
             user ru
        WHERE c.root_comment_id = #{rootCommentId}
          and c.user_id = u.user_id
          and r.comment_id = c.reply_comment_id
          and r.user_id = ru.user_id
        order by c.comment_id asc
    </select>

    <select id="selectReplyComment" resultType="dto.ReplyCommentDTO">
        SELECT
            c.comment_id       as commentId,
            c.comment_content  as commentContent,
            c.comment_time     as commentTime,
            c.user_agent       as userAgent,
            c.root_comment_id  as rootCommentId,
            c.reply_comment_id as replyCommentId,
            u.user_id          as userId,
            u.username         as username,
            ru.username        as replyUsername,
            ru.user_id         as replyUserId
        FROM comment c,
             user u,
             comment r,
             user ru
        WHERE c.comment_id = #{id}
          and c.user_id = u.user_id
          and r.comment_id = c.reply_comment_id
          and r.user_id = ru.user_id
    </select>

</mapper>


        <!--<resultMap id="replyComment" type="dto.ReplyCommentDTO">-->
        <!--<id column="commentId" property="commentId"/>-->
        <!--<result column="commentContent" property="commentContent"/>-->
        <!--<result column="commentTime" property="commentTime"/>-->
        <!--<result column="userAgent" property="userAgent"/>-->
        <!--<result column="rootCommentId" property="rootCommentId"/>-->
        <!--<result column="replyCommentId" property="replyCommentId"/>-->
        <!--<result column="userId" property="userId"/>-->
        <!--<result column="username" property="username"/>-->
        <!--<result column="replyUsername" property="replyUsername"/>-->
        <!--<result column="replyUserId" property="replyUserId"/>-->
        <!--</resultMap>-->